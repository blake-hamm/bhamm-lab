- name: Run pre-task
  ansible.builtin.include_tasks: pre.yml
- name: Check for vault ssh credentials
  community.hashi_vault.vault_read:
    url: https://vault.bhamm-lab.com
    auth_method: approle
    role_id: "{{ lookup('env', 'VAULT_ROLE_ID') }}"
    secret_id: "{{ lookup('env', 'VAULT_SECRET_ID') }}"
    path: secret/data/core/ansible/{{ item.name }}
  with_items: "{{ debian_host_list }}"
  register: host_in_vault
  ignore_errors: true
  retries: 1
  delegate_to: localhost
- name: Attempt to SSH into the remote host assuming vanila ssh config
  ansible.builtin.command: |
    sshpass -p "{{ vault_preseed_secrets.data.data.data.user_password }}" \
      ssh -o StrictHostKeyChecking=no \
      {{ vault_preseed_secrets.data.data.data.username }}@{{ hostvars[item.item.name].ansible_host }} \
      -p 22 "echo Connection successful"
  register: ssh_result
  ignore_errors: true
  with_items: "{{ host_in_vault.results }}"
  when: host_in_vault.failed | default(false)
  changed_when: false
  delegate_to: localhost
# TODO: Ensure preseed assets can be removed every time
- name: If no ssh, create preseed assets, wait for ssh and remove preseed assets
  ansible.builtin.include_tasks:
    file: preseed.yml
    apply:
      delegate_to: localhost
  vars:
    hostname: "{{ item.item.item.name }}"
    disk_id: "{{ item.item.item.disk_id }}"
    username: "{{ vault_preseed_secrets.data.data.data.username }}"
    user_password: "{{ vault_preseed_secrets.data.data.data.user_password }}"
  with_items: "{{ ssh_result.results }}"
  when: host_in_vault.failed | default(false)
- name: Run post-tasks
  ansible.builtin.include_tasks: post.yml
