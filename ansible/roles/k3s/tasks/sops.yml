- name: Load encrypted secrets
  community.sops.load_vars:
    file: "{{ playbook_dir }}/../secrets.enc.json"
  register: sops_secrets
  delegate_to: localhost
  # no_log: true
- name: Extract GCP secrets for bootstrap
  ansible.builtin.set_fact:
    gcp_sops_sa: "{{ sops_secrets.ansible_facts.ansible_secrets.gcp['gcp-sops-sa'] }}"
    gcp_k8up_sa: "{{ sops_secrets.ansible_facts.ansible_secrets.gcp['gcp-k8up-sa'] }}"
  no_log: true
- name: Create Vault namespace
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: vault
    wait: true
  retries: 3
  delay: 15
- name: Deploy GCP sops secrets as Kubernetes secrets
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "gcp-sops-sa"
        namespace: vault
      type: Opaque
      data:
        service-account.json: "{{ gcp_sops_sa | to_json | b64encode }}"
    wait: true
  retries: 3
  delay: 15
  no_log: true
- name: Create k8up namespace
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: k8up
    wait: true
  retries: 3
  delay: 15
- name: Deploy GCP k8up secrets as Kubernetes secrets
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "gcp-k8up-sa"
        namespace: k8up
      type: Opaque
      data:
        service-account.json: "{{ gcp_k8up_sa | to_json | b64encode }}"
    wait: true
  retries: 3
  delay: 15
  no_log: true
