- name: Ensure ethtool is installed
  ansible.builtin.apt:
    name: ethtool
    state: present
- name: Enable NIC offload features
  ansible.builtin.command: |
    ethtool -K {{ nic_name }} tso on gso on gro on lro on tx on rx on
  changed_when: false
  loop_control:
    loop_var: nic_name
  loop: "{{ network_10gb_nics | list }}"
- name: Get current NIC ring buffer settings
  ansible.builtin.command: "ethtool -g {{ nic_name }}"
  register: nic_buffers_raw
  changed_when: false
  loop_control:
    loop_var: nic_name
  loop: "{{ network_10gb_nics | list }}"
  ignore_errors: true
- name: Extract NIC maximum ring buffer settings
  ansible.builtin.set_fact:
    nic_buffers: >-
      {{
        nic_buffers | default([]) + [
          {
            'nic_name': item.nic_name,
            'max_rx': (
              item.stdout.split('Pre-set maximums:')[1]
              .split('Current hardware settings:')[0]
              | regex_search('RX:\s*(\d+)', '\1')
              | first
            ),
            'max_tx': (
              item.stdout.split('Pre-set maximums:')[1]
              .split('Current hardware settings:')[0]
              | regex_search('TX:\s*(\d+)', '\1')
              | first
            )
          }
        ]
      }}
  loop: "{{ nic_buffers_raw.results }}"
  when: item.rc == 0
- name: Set NIC ring buffers to maximum supported size
  ansible.builtin.command: "ethtool -G {{ item.nic_name }} rx {{ item.max_rx }} tx {{ item.max_tx }}"
  loop: "{{ nic_buffers }}"
  loop_control:
    loop_var: item
  when: nic_buffers is defined
  changed_when: false
- name: Set socket buffer sizes
  ansible.posix.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: true
    sysctl_set: true
  loop:
    - {name: net.core.rmem_max, value: 16777216}
    - {name: net.core.wmem_max, value: 16777216}
- name: Persist socket buffer sizes
  ansible.builtin.lineinfile:
    path: /etc/sysctl.conf
    regexp: "^{{ item.name }} ="
    line: "{{ item.name }} = {{ item.value }}"
    state: present
  loop:
    - {name: net.core.rmem_max, value: 16777216}
    - {name: net.core.wmem_max, value: 16777216}
- name: Install cpufrequtils
  ansible.builtin.apt:
    name: cpufrequtils
    state: present
- name: Set CPU performance governor
  ansible.builtin.lineinfile:
    path: /etc/default/cpufrequtils
    regexp: '^GOVERNOR='
    line: 'GOVERNOR="performance"'
    state: present
    create: true
    owner: root
    group: root
    mode: '0644'
  notify: Restart cpufrequtils
