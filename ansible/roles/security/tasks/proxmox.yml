- name: Ensure root user exists
  ansible.builtin.user:
    name: root
    state: present
    shell: /bin/bash
- name: Ensure /root/.ssh directory exists
  ansible.builtin.file:
    path: /root/.ssh
    state: directory
    mode: '0700'
    owner: root
    group: root
- name: Generate SSH key pair for root (if not already present)
  community.crypto.openssh_keypair:
    path: /root/.ssh/id_ed25519
    type: ed25519
    owner: root
    group: root
    mode: '0600'
  register: root_ssh_keypair
- name: Create proxmox_host_keys dictionary with list of keys
  ansible.builtin.set_fact:
    proxmox_host_keys:
      root: ["{{ root_ssh_keypair.public_key }}"]
- name: Aggregate keys from other Proxmox hosts
  ansible.builtin.set_fact:
    ssh_authorized_keys: >-
      {{ ssh_authorized_keys | combine(
           hostvars[item].proxmox_host_keys | default({}),
           recursive=true,
           list_merge='append'
         )
       }}
  loop: "{{ groups['proxmox'] }}"
  when: inventory_hostname != item
- name: Slurp ed25519 host key from each node
  ansible.builtin.slurp:
    src: /etc/ssh/ssh_host_ed25519_key.pub
  register: slurped_host_key
- name: Build known_hosts entries for each node
  ansible.builtin.set_fact:
    known_hosts_entries: >-
      {{ known_hosts_entries | default([]) + [
        {
          'hostname': hostvars[item].inventory_hostname,
          'key': hostvars[item].slurped_host_key['content'] | b64decode | trim
        }
      ] }}
  loop: "{{ groups['proxmox'] }}"
- name: Create file for node's ssh_known_hosts
  ansible.builtin.file:
    path: "/etc/pve/nodes/{{ item.hostname }}/ssh_known_hosts"
    state: file
    owner: root
    group: www-data
    mode: "0640"
  loop: "{{ known_hosts_entries }}"
- name: Add entries to node's known_hosts file
  ansible.builtin.known_hosts:
    path: "/etc/pve/nodes/{{ item.hostname }}/ssh_known_hosts"
    name: "{{ item.hostname }}"
    key: "{{ item.hostname }} {{ item.key }}"
    state: present
  loop: "{{ known_hosts_entries }}"
