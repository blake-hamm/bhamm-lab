{{- if .Values.k8up.backup.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: generate-secret-{{ .Values.name }}
  namespace: k8up
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "15"
spec:
  entrypoint: generate-secret
  templates:
    - name: generate-secret
      script:
        image: google/cloud-sdk:latest
        command: [bash]
        source: |
          set -e

          echo "Activating service account using the service-account.json..."
          gcloud auth activate-service-account --key-file=/secrets/service-account.json

          echo "Generating temporary access token..."
          ACCESS_TOKEN=$(gcloud auth print-access-token)

          echo "Extracting project_id from service-account.json..."
          PROJECT_ID=$(cat /secrets/project_id)

          echo "Creating secret 'gcp-k8up-temp' in the '{{ .Values.name }}' namespace..."
          kubectl apply -f - <<EOF
          apiVersion: v1
          kind: Secret
          metadata:
            name: gcp-k8up-temp
            namespace: {{ .Values.name }}
          type: Opaque
          stringData:
            project_id: "$PROJECT_ID"
            accessToken: "$ACCESS_TOKEN"
          EOF

          # Verify the secret was created
          if ! kubectl get secret gcp-k8up-temp -n {{ .Values.name }} &>/dev/null; then
            echo "Failed to create secret" >&2
            exit 1
          fi
        volumeMounts:
          - name: gcp-sa
            mountPath: /secrets
{{- end }}