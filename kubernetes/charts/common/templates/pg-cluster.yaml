{{- if .Values.postgresql.enabled }}
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ .Values.name }}-postgresql
  namespace: {{ .Values.name }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "-1"
spec:
  {{- if .Values.postgresql.imageName }}
  imageName: {{ .Values.postgresql.imageName | quote }}
  {{- end }}
  instances: {{ .Values.postgresql.instances }}
  storage:
    size: {{ .Values.postgresql.storageSize }}
  {{- if .Values.postgresql.sharedPreloadLibraries }}
  postgresql:
    shared_preload_libraries: {{ toYaml .Values.postgresql.sharedPreloadLibraries | nindent 4 }}
  {{- end }}
  {{- if .Values.postgresql.managed.roles }}
  managed:
    roles:
{{ toYaml .Values.postgresql.managed.roles | nindent 6 }}
  {{- end }}
  bootstrap:
    {{- if .Values.postgresql.recoverySnapshotName }}
    recovery:
      database: {{ .Values.postgresql.databaseName | default .Values.name }}
      owner: {{ .Values.name }}
      volumeSnapshots:
        storage:
          name: {{ .Values.postgresql.recoverySnapshotName }}
          kind: VolumeSnapshot
          apiGroup: snapshot.storage.k8s.io
    {{- else }}
    initdb:
      database: {{ .Values.postgresql.databaseName | default .Values.name }}
      owner: {{ .Values.name }}
      {{- if .Values.postgresql.postInitSQL }}
      postInitSQL:
{{ toYaml .Values.postgresql.postInitSQL | nindent 8 }}
      {{- end }}
    {{- end }}
  enableSuperuserAccess: false
  {{- if .Values.postgresql.backups.enabled }}
  backup:
    # volumeSnapshot:
    #   className: ceph-snapclass
    retentionPolicy: "{{ .Values.postgresql.backups.retention }}"
    barmanObjectStore:
      destinationPath: "s3://pg-backups/{{ .Values.name }}"
      endpointURL: https://minio-api.bhamm-lab.com
      s3Credentials:
        accessKeyId:
          name: pg-minio
          key: CONSOLE_ACCESS_KEY
        secretAccessKey:
          name: pg-minio
          key: CONSOLE_SECRET_KEY
  {{- end }}
{{- end }}