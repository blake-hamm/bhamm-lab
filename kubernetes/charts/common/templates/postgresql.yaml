{{- if .Values.postgresql.enabled }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gcp-pg-auth
  namespace: {{ .Values.name }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "-2"
spec:
  refreshInterval: 30m
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: gcp-pg-auth
  data:
    - secretKey: config.json
      remoteRef:
        key: /external/gcp
        property: gcp-k8up-sa
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ .Values.name }}-postgresql
  namespace: {{ .Values.name }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "-1"
spec:
  instances: {{ .Values.postgresql.instances }}
  storage:
    size: {{ .Values.postgresql.storageSize }}
  bootstrap:
    initdb:
      database: {{ .Values.name }}
      owner: {{ .Values.name }}
  enableSuperuserAccess: false
{{- if .Values.postgresql.backups.enabled }}
  backup:
    barmanObjectStore:
      destinationPath: "gs:bhamm-lab-k8up/cloudnative-pg/{{ .Values.name }}"
      googleCredentials:
        applicationCredentials:
          name: gcp-pg-auth
          key: config.json
    retentionPolicy: "{{ .Values.postgresql.backups.retention }}"
---
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.name }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  schedule: {{ .Values.postgresql.backups.schedule }}
  cluster:
    name: {{ .Values.name }}-postgresql
{{- end }}
{{- end }}