apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: argo-init-workflow
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
    argocd.argoproj.io/sync-options: Replace=true
spec:
  entrypoint: main
  serviceAccountName: argo-init-workflow-sa
  templates:
    - name: main
      steps:
        - - name: fetch-sops-file
            template: fetch-sops-file
        - - name: decrypt-sops-file
            template: decrypt-sops-file
            arguments:
              artifacts:
                - name: secrets
                  from: "{{steps.fetch-sops-file.outputs.artifacts.secrets}}"
        - - name: update-vault
            template: update-vault
            arguments:
              artifacts:
                - name: secrets
                  from: "{{steps.decrypt-sops-file.outputs.artifacts.secrets}}"
                  # - - name: replace-core-base
                  #     template: replace-core-base
    - name: fetch-sops-file
      container:
        image: alpine/git:v2.47.1
        command:
          - sh
          - -c
        args:
          - |
            git clone -b feature/k3s https://github.com/blake-hamm/bhamm-lab.git /workspace/repo
            cp /workspace/repo/secrets.enc.yaml /workspace/secrets.enc.yaml
        volumeMounts:
          - name: workspace
            mountPath: /workspace
      outputs:
        artifacts:
          - name: secrets
            path: /workspace/secrets.enc.yaml
    - name: decrypt-sops-file
      inputs:
        artifacts:
          - name: secrets
            path: /workspace/secrets.enc.yaml
      container:
        image: mozilla/sops:v3-alpine
        command:
          - sh
          - -c
        args:
          - |
            sops --decrypt /workspace/secrets.enc.yaml > /workspace/secrets.decrypted.yaml
        env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /secrets/gcp/service-account.json
        volumeMounts:
          - name: gcp-credentials
            mountPath: /secrets/gcp
            readOnly: true
          - name: workspace
            mountPath: /workspace
      outputs:
        artifacts:
          - name: secrets
            path: /workspace/secrets.decrypted.yaml
    - name: update-vault
      inputs:
        artifacts:
          - name: secrets
            path: /workspace/secrets.decrypted.yaml
      container:
        image: debian:bookworm-20241223
        command:
          - sh
          - -c
        args:
          - |
            wget -O - https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
            apt update && apt install vault
            # Loop through each app in the vault_secrets section
            for app in $(yq e '.vault_secrets | keys | .[]' /workspace/secrets.decrypted.yaml); do
              # Loop through each key-value pair for the current app
              for key in $(yq e ".vault_secrets[$app] | keys | .[]" /workspace/secrets.decrypted.yaml); do
                # Extract the value for the current key
                value=$(yq e ".vault_secrets[$app][$key]" /workspace/secrets.decrypted.yaml)

                # Set the secret in Vault
                vault kv put "secret/$app/$key" value=$value
              done
            done
        env:
          - name: VAULT_ADDR
            value: "http://vault.vault.svc.cluster.local:8200"
        volumeMounts:
          - name: workspace
            mountPath: /workspace
  # - name: replace-core-base
  #   container:
  #     image: argoproj/argocd-cli:latest
  #     command:
  #       - sh
  #       - -c
  #     args:
  #       - |
  #         argocd app delete core-base --yes
  #         argocd app create core-configured \
  #           --repo https://your-repo-url.git \
  #           --path core-configured \
  #           --dest-namespace default \
  #           --dest-server https://kubernetes.default.svc
  volumes:
    - name: workspace
      emptyDir: {}
    - name: gcp-credentials
      secret:
        secretName: gcp-sops-sa
