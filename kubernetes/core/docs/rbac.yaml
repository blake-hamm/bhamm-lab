# Create a ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mkdocs-action-sa
  annotations:
    argocd.argoproj.io/sync-wave: "420"
---
# Create a ClusterRole with the necessary permissions
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mkdocs-action-role
  annotations:
    argocd.argoproj.io/sync-wave: "420"
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log", "persistentvolumeclaims"]
    verbs: ["get", "list", "create", "delete", "update", "patch"]
---
# Bind the ServiceAccount to the ClusterRole
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mkdocs-action-binding
  annotations:
    argocd.argoproj.io/sync-wave: "420"
subjects:
  - kind: ServiceAccount
    name: mkdocs-action-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: mkdocs-action-role
  apiGroup: rbac.authorization.k8s.io
---
# Create secret for SA
apiVersion: v1
kind: Secret
metadata:
  name: mkdocs-action-sa-token
  annotations:
    kubernetes.io/service-account.name: mkdocs-action-sa
type: kubernetes.io/service-account-token
