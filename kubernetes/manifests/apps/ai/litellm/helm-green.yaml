apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: litellm
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "24"
spec:
  destination:
    namespace: litellm
    server: https://kubernetes.default.svc
  project: default
  source:
    chart: litellm-helm
    repoURL: ghcr.io/berriai/litellm-helm
    targetRevision: 0.1.799
    helm:
      valuesObject:
        replicaCount: 1
        image:
          repository: ghcr.io/berriai/litellm
          pullPolicy: Always
          tag: "v1.77.7-stable"
        # At the time of writing, the litellm docker image requires write access to the
        #  filesystem on startup so that prisma can install some dependencies.
        podSecurityContext: {}
        securityContext: {}
        # capabilities:
        #   drop:
        #     - ALL
        # readOnlyRootFilesystem: false
        # runAsNonRoot: true
        # runAsUser: 1000
        masterkeySecretName: "litellm-external-secret"
        masterkeySecretKey: "LITELLM_MASTER_KEY"
        proxyConfigMap:
          create: true
        proxy_config:
          model_list:
            - model_name: llama-70b
              litellm_params:
                model: openai/llama-70b
                api_base: http://llama-swap.llama-swap.svc.cluster.local:8080/v1
                api_key: "dummy"
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        nodeSelector: {}
        tolerations: []
        db:
          useExisting: true
          database: litellm
          url: postgresql://$(DATABASE_USERNAME):$(DATABASE_PASSWORD)@$(DATABASE_HOST)/$(DATABASE_NAME)
          secret:
            name: postgres
            usernameKey: username
            passwordKey: password
            endpointKey: ""
          deployStandalone: false
        # requires cache: true in config file
        # either enable this or pass a secret for REDIS_HOST, REDIS_PORT, REDIS_PASSWORD or REDIS_URL
        # with cache: true to use existing redis instance
        redis:
          enabled: false
          architecture: standalone
        # Prisma migration job settings
        migrationJob:
          enabled: true # Enable or disable the schema migration Job
          retries: 3 # Number of retries for the Job in case of failure
          backoffLimit: 4 # Backoff limit for Job restarts
          disableSchemaUpdate: false # Skip schema migrations for specific environments. When True, the job will exit with code 0.
          annotations: {}
          ttlSecondsAfterFinished: 120
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          extraContainers: []
          hooks:
            argocd:
              enabled: true
            helm:
              enabled: false
        # Additional environment variables to be added to the deployment as a list of k8s env vars
        extraEnvVars:
          - name: DATABASE_URL
            value: "litellm-postgresql-rw"
          - name: LITELLM_MASTER_KEY
            valueFrom:
              secretKeyRef:
                name: litellm-external-secret
                key: LITELLM_MASTER_KEY
          - name: LITELLM_SALT_KEY
            valueFrom:
              secretKeyRef:
                name: litellm-external-secret
                key: LITELLM_SALT_KEY
  syncPolicy:
    syncOptions:
      - ApplyOutOfSyncOnly=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true
