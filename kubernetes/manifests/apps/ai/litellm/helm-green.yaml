apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: litellm
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "24"
spec:
  destination:
    namespace: litellm
    server: https://kubernetes.default.svc
  project: default
  source:
    repoURL: https://github.com/BerriAI/litellm.git
    targetRevision: v1.77.7-stable
    path: deploy/charts/litellm-helm
    helm:
      valuesObject:
        replicaCount: 1
        image:
          repository: ghcr.io/berriai/litellm
          pullPolicy: Always
          tag: "v1.77.7-stable"
        masterkeySecretName: "litellm-external-secret"
        masterkeySecretKey: "LITELLM_MASTER_KEY"
        proxyConfigMap:
          create: true
        proxy_config:
          general_settings:
            ui_access_mode: admin_only
          router_settings:
            routing_strategy: simple-shuffle
            redis_host: os.environ/REDIS_HOST
            redis_port: os.environ/REDIS_PORT
            redis_password: os.environ/REDIS_PASSWORD
          litellm_settings:
            callbacks: ["prometheus"]
            cache: True
            cache_params:
              type: redis
              host: os.environ/REDIS_HOST
              port: os.environ/REDIS_PORT
              password: os.environ/REDIS_PASSWORD
              supported_call_types: [] # Disabled llm caching (use qdrant instead)
          model_list:
            - model_name: gpt-oss-120b
              litellm_params:
                model: openai/gpt-oss-120b
                api_base: http://gpt-oss-120b.models.svc.cluster.local:8080/v1
                api_key: "dummy"
        resources:
          requests:
            cpu: 500m
            memory: 1024Mi
          limits:
            cpu: 1000m
            memory: 2048Mi
        nodeSelector:
          feature.node.kubernetes.io/amd-gpu: "true"
        tolerations:
          - key: "amd.com/gpu"
            operator: "Exists"
            effect: "NoSchedule"
        db:
          useExisting: true
          database: litellm
          url: postgresql://$(DATABASE_USERNAME):$(DATABASE_PASSWORD)@$(DATABASE_HOST)/$(DATABASE_NAME)
          secret:
            name: litellm-postgresql-app
            usernameKey: username
            passwordKey: password
            endpointKey: host
          deployStandalone: false
        envVars:
          REDIS_HOST: "litellm-dragonfly"
          REDIS_PORT: "6379"
          REIDS_PASSWORD: ""
        migrationJob:
          hooks:
            argocd:
              enabled: true
        extraEnvVars:
          - name: LITELLM_MASTER_KEY
            valueFrom:
              secretKeyRef:
                name: litellm-external-secret
                key: LITELLM_MASTER_KEY
          - name: LITELLM_SALT_KEY
            valueFrom:
              secretKeyRef:
                name: litellm-external-secret
                key: LITELLM_SALT_KEY
          - name: GENERIC_CLIENT_ID
            value: litellm
          - name: GENERIC_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: litellm-external-secret
                key: GENERIC_CLIENT_SECRET
          - name: GENERIC_AUTHORIZATION_ENDPOINT
            value: https://auth.bhamm-lab.com/api/oidc/authorization
          - name: GENERIC_TOKEN_ENDPOINT
            value: https://auth.bhamm-lab.com/api/oidc/token
          - name: GENERIC_USERINFO_ENDPOINT
            value: https://auth.bhamm-lab.com/api/oidc/userinfo
          - name: PROXY_BASE_URL
            value: https://litellm.bhamm-lab.com
          - name: GENERIC_SCOPE
            value: openid profile email groups
          - name: GENERIC_USER_ID_ATTRIBUTE
            value: sub
          - name: GENERIC_USER_EMAIL_ATTRIBUTE
            value: email
          - name: GENERIC_USER_DISPLAY_NAME_ATTRIBUTE
            value: name
          - name: GENERIC_USER_ROLE_ATTRIBUTE
            value: groups
          - name: GENERIC_CLIENT_STATE
            valueFrom:
              secretKeyRef:
                name: litellm-external-secret
                key: GENERIC_CLIENT_STATE
  syncPolicy:
    syncOptions:
      - ApplyOutOfSyncOnly=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true
