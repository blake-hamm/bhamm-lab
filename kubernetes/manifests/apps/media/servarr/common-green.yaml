apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: servarr-common
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "20"
spec:
  destination:
    namespace: servarr
    server: https://kubernetes.default.svc
  project: default
  source:
    repoURL: https://github.com/blake-hamm/bhamm-lab.git
    targetRevision: main
    path: kubernetes/charts/common
    helm:
      valuesObject:
        name: servarr
        externalSecrets:
          enabled: true
          secrets:
            - secretKey: WIREGUARD_PRIVATE_KEY
              remoteRef:
                key: /default/servarr
                property: WIREGUARD_PRIVATE_KEY
            - secretKey: UN_SONARR_0_API_KEY
              remoteRef:
                key: /default/servarr
                property: UN_SONARR_0_API_KEY
            - secretKey: UN_RADARR_0_API_KEY
              remoteRef:
                key: /default/servarr
                property: UN_RADARR_0_API_KEY
        k8up:
          backup:
            enabled: true
        ingressRoutes:
          - enabled: true
            name: qbittorrent
            ingressClass: traefik-external
            # websocket: true
            routes:
              - kind: Rule
                match: Host(`qbittorrent.bhamm-lab.com`)
                middlewares:
                  - name: default-headers
                services:
                  - name: qbittorrent
                    scheme: http
                    port: webui
          - enabled: true
            name: prowlarr
            ingressClass: traefik-external
            # websocket: true
            routes:
              - kind: Rule
                match: Host(`prowlarr.bhamm-lab.com`)
                middlewares:
                  - name: default-headers
                services:
                  - name: prowlarr
                    scheme: http
                    port: ui
          - enabled: true
            name: sonarr
            ingressClass: traefik-external
            # websocket: true
            routes:
              - kind: Rule
                match: Host(`sonarr.bhamm-lab.com`)
                middlewares:
                  - name: default-headers
                services:
                  - name: sonarr
                    scheme: http
                    port: ui
          - enabled: true
            name: jellyfin
            ingressClass: traefik-external
            # websocket: true
            routes:
              - kind: Rule
                match: Host(`jellyfin.bhamm-lab.com`)
                middlewares:
                  - name: default-headers
                services:
                  - name: jellyfin
                    scheme: http
                    port: http
          - enabled: true
            name: radarr
            ingressClass: traefik-external
            # websocket: true
            routes:
              - kind: Rule
                match: Host(`radarr.bhamm-lab.com`)
                middlewares:
                  - name: default-headers
                services:
                  - name: radarr
                    scheme: http
                    port: ui
  syncPolicy:
    syncOptions:
      - ApplyOutOfSyncOnly=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true
