apiVersion: v1
kind: ServiceAccount
metadata:
  name: ceph-check-sa
  namespace: ceph
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "0"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ceph-check-role
  namespace: ceph
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "0"
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/exec"]
    verbs: ["get", "list", "patch", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ceph-check-binding
  namespace: ceph
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "0"
roleRef:
  kind: Role
  name: ceph-check-role
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: ceph-check-sa
    namespace: ceph
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ceph-check-job
  namespace: ceph
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  backoffLimit: 1
  activeDeadlineSeconds: 600
  template:
    spec:
      serviceAccountName: ceph-check-sa
      containers:
        - name: ceph-check
          image: bitnami/kubectl:latest
          command:
            - /bin/sh
            - -c
          args:
            - |
              until kubectl get pods -n ceph -l app=ceph-csi-rbd \
                  -o jsonpath='{.items[*].status.containerStatuses[0].ready}' \
                  | grep "true"; do
                echo "Waiting for Ceph CSI pods to be ready...";
                sleep 5;
              done
      restartPolicy: Never
