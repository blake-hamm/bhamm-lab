apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: seaweedfs
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "7"
spec:
  destination:
    namespace: seaweedfs
    server: https://kubernetes.default.svc
  project: default
  source:
    repoURL: https://seaweedfs.github.io/seaweedfs/helm
    chart: seaweedfs
    targetRevision: 4.0.393
    helm:
      valuesObject:
        global:
          monitoring:
            enabled: true
            additionalLabels:
              release: monitor
          extraEnvironmentVars:
            WEED_CLUSTER_DEFAULT: "sw"
            WEED_CLUSTER_SW_MASTER: "seaweedfs-master.seaweedfs:9333"
            WEED_CLUSTER_SW_FILER: "seaweedfs-filer-client.seaweedfs:8888"
          enableReplication: true
          replicationPlacement: "000"
          enableSecurity: false
        master:
          enabled: true
          replicas: 1
          resumeState: false
          volumePreallocate: true
          volumeSizeLimitMB: 10000
          data:
            type: "persistentVolumeClaim"
            size: 10Gi
            annotations:
              "k8up.io/backup": "true"
          logs:
            type: "emptyDir"
          livenessProbe:
            periodSeconds: 15
          readinessProbe:
            periodSeconds: 15
        volume:
          enabled: true
          replicas: 2
          index: leveldbMedium
          readMode: proxy
          dataDirs:
            - name: data
              type: "persistentVolumeClaim"
              size: 300Gi
              maxVolumes: 0
              annotations:
                "k8up.io/backup": "true"
          idx:
            type: "persistentVolumeClaim"
            size: 10Gi
            annotations:
              "k8up.io/backup": "true"
          logs:
            type: "emptyDir"
          livenessProbe:
            enabled: true
            httpGet:
              path: /healthz
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 6
            timeoutSeconds: 30
          readinessProbe:
            enabled: true
            httpGet:
              path: /healthz
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 25
            timeoutSeconds: 30
        filer:
          enabled: true
          replicas: 2
          enablePVC: true
          storage: 10Gi
          data:
            type: "persistentVolumeClaim"
            size: 10Gi
            annotations:
              "k8up.io/backup": "true"
          logs:
            type: "emptyDir"
          extraEnvironmentVars:
            WEED_LEVELDB2_ENABLED: "true"
            WEED_FILER_OPTIONS_RECURSIVE_DELETE: "false"
            WEED_FILER_BUCKETS_FOLDER: "/buckets"
          s3:
            enabled: true
            enableAuth: true
            port: 8333
            httpsPort: 0
            allowEmptyFolder: true
            createBuckets:
              - name: argo-artifacts
                anonymousRead: false
              - name: loki-data
                anonymousRead: false
              - name: tofu-state
                anonymousRead: false
              - name: cnpg-backups
                anonymousRead: false
              - name: k8up-backups
                anonymousRead: false
          livenessProbe:
            periodSeconds: 15
          readinessProbe:
            periodSeconds: 15
        s3:
          enabled: false
        cosi:
          enabled: false
  syncPolicy:
    syncOptions:
      - ApplyOutOfSyncOnly=true
      - CreateNamespace=true
    automated:
      prune: true
      selfHeal: true
